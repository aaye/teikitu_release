/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS (X86_64) Common - Math [Vector] [S32].inl
    »Author«    Andrew Aye (mailto: teikitu@andrewaye.com, https://www.andrew.aye.page)
    »Version«   5.16 | »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2022, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
#if !defined(TGS_COMMON_MATH_API_VECTOR_S32_INL)
#define TGS_COMMON_MATH_API_VECTOR_S32_INL
#pragma once


/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- tgMH_SETU_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(cast-align)
TgINLINE TgVEC_S32_04_1 tgMH_SETU_S32_04_1( TgSINT_F32_CPCU puiVal )
{
    return (_mm_loadu_si128( (__m128i const *)puiVal ));
}
CLANG_WARN_DISABLE_POP()


/* ---- tgMH_SETA_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(cast-align)
TgINLINE TgVEC_S32_04_1 tgMH_SETA_S32_04_1( TgSINT_F32_CPCU puiVal )
{
    return (_mm_load_si128( (__m128i const *)puiVal ));
}
CLANG_WARN_DISABLE_POP()


/* ---- tgMH_SET1_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SET1_S32_04_1( TgSINT_F32_C iVal )
{
    return (_mm_set1_epi32( iVal ));
}


/* ---- tgMH_SET4_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SET4_S32_04_1( TgSINT_F32_C fX, TgSINT_F32_C fY, TgSINT_F32_C fZ, TgSINT_F32_C fW )
{
    return (_mm_set_epi32( fW, fZ, fY, fX ));
}


/* ---- tgMH_RAND_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_RAND_S32_04_1( TgVOID )
{
    TgUN_V128                           vResult;

    vResult.m_vS_S32_04_1 = tgMH_RAND_S_S32_04_1();
    return (vResult.m_vS32_04_1);
}


/* ---- tgMH_SEL_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SEL_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight, TgVEC_S32_04_1_C tuvMask )
{
    return (_mm_or_si128( _mm_and_si128( vLeft, _mm_xor_si128( KTgFFFF_V128.m_vS32_04_1, tuvMask ) ), _mm_and_si128( vRight, tuvMask ) ));
}


/* ---- tgMH_AND_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_AND_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_and_si128( vLeft, vRight ));
}


/* ---- tgMH_OR_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_OR_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_or_si128( vLeft, vRight ));
}


/* ---- tgMH_XOR_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_XOR_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_xor_si128( vLeft, vRight ));
}


/* ---- tgMH_MAX_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_MAX_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_max_epi32( vLeft, vRight ));
}


/* ---- tgMH_MIN_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_MIN_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_min_epi32( vLeft, vRight ));
}


/* ---- tgMH_ABS_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_ABS_S32_04_1( TgVEC_S32_04_1_C v0 )
{
    return (_mm_sign_epi32( v0, v0 ));
}


/* ---- tgMH_SGN_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SGN_S32_04_1( TgVEC_S32_04_1_C v0 )
{
    return (_mm_sign_epi32( _mm_set1_epi32(1), v0 ));
}


/* ---- tgMH_CMP_EQ_S32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_EQ_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_cmpeq_epi32( vLeft, vRight ));
}


/* ---- tgMH_CMP_NE_S32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_NE_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_xor_si128( KTgFFFF_V128.m_vS32_04_1, _mm_cmpeq_epi32( vLeft, vRight ) ));
}


/* ---- tgMH_CMP_GE_S32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_GE_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_xor_si128( KTgFFFF_V128.m_vS32_04_1, _mm_cmpgt_epi32( vRight, vLeft ) ));
}


/* ---- tgMH_CMP_GT_S32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_GT_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_cmpgt_epi32( vLeft, vRight ));
}


/* ---- tgMH_CMP_LE_S32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_LE_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_xor_si128( KTgFFFF_V128.m_vS32_04_1, _mm_cmpgt_epi32( vLeft, vRight ) ));
}


/* ---- tgMH_CMP_LT_S32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_CMP_LT_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_cmpgt_epi32( vRight, vLeft ));
}


/* ---- tgMH_CMP_ALL_TO_BOOL_S32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_CMP_ALL_TO_BOOL_S32_04_1( TgVEC_S32_04_1_C vARG )
{
    return (0 == _mm_test_all_ones( vARG ) ? false : true);
}


/* ---- tgMH_ADD_CLP_S32_04_1 ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_ADD_CLP_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    TgUN_V128                           vResult;

    vResult.m_vS_S32_04_1 = tgMH_ADD_CLP_S_S32_04_1( *(TgVEC_S_S32_04_1_CP)&vLeft, *(TgVEC_S_S32_04_1_CP)&vRight );
    return (vResult.m_vS32_04_1);
}


/* ---- tgMH_ADD_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_ADD_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_add_epi32( vLeft, vRight ));
}


/* ---- tgMH_SUB_CLP_S32_04_1 ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SUB_CLP_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    TgUN_V128                           vResult;

    vResult.m_vS_S32_04_1 = tgMH_SUB_CLP_S_S32_04_1( *(TgVEC_S_S32_04_1_CP)&vLeft, *(TgVEC_S_S32_04_1_CP)&vRight );
    return (vResult.m_vS32_04_1);
}


/* ---- tgMH_SUB_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_SUB_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    return (_mm_sub_epi32( vLeft, vRight ));
}


/* ---- tgMH_AVG_S32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_S32_04_1 tgMH_AVG_S32_04_1( TgVEC_S32_04_1_C vLeft, TgVEC_S32_04_1_C vRight )
{
    TgUN_V128                           vResult;

    vResult.m_vS_S32_04_1 = tgMH_AVG_S_S32_04_1( *(TgVEC_S_S32_04_1_CP)&vLeft, *(TgVEC_S_S32_04_1_CP)&vRight );
    return (vResult.m_vS32_04_1);
}


/* =============================================================================================================================================================================== */
#endif
