/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision [Unit Test] - F - Box AA.c_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.12 | »GUID« 964CB1A6-814D-4E19-8E67-A83FCA98BF05 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2023, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */

#if !defined (ENABLE_RELOAD_GUARD)
    #define ENABLE_RELOAD_GUARD
    #if !defined(TEMPLATE__TYPE_SIZE)
        #if TgCOMPILE__NON_NATIVE_VECTOR_AS_NATIVE
            #define TEMPLATE__TYPE_SIZE 64
            #include __FILE__
            #undef TEMPLATE__TYPE_SIZE
        #endif
        #define TEMPLATE__TYPE_SIZE 32
    #endif
    #undef ENABLE_RELOAD_GUARD
#endif

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"


/* == Collision ================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Unit Test Functions                                                                                                                                                            */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

TEST_METHOD( FCN_VO(TEST__COLLISION_TRIANGLE) )
{
    VEC_T(1)                            vV0;
    VEC_OBJ_T(STg2_CO_Packet)           sPK;
    VEC_OBJ_T(STg2_CO_Clip_List)        sCL;
    VEC_OBJ_T(STg2_CO_Axis_Project)     sAP;
    TgSINT_F32                          iI0;
    VEC_OBJ_T(TgDELTA)                  sDT;
    VEC_OBJ_T(TgLINE)                   sLN0;
    VEC_OBJ_T(TgRAY)                    sRY0;
    VEC_OBJ_T(TgSEGMENT)                sSG0;
    VEC_OBJ_T(TgPTRI)                   sPT0;
    VEC_OBJ_T(TgETRI)                   sET0;
    VEC_OBJ_T(TgSTRI)                   sST0;
    VEC_OBJ_T(TgPARTICLE)               sPC0;

    vV0 = FCN_V(tgMH_Init_Vector_ELEM)( FCN_F(tgCM_RAND)(), FCN_F(tgCM_RAND)(), FCN_F(tgCM_RAND)() );

    /* Triangle - Point                                                                                                                                                            */
    FCN_VO(tgCO_ET_DistSq_PT)( &sET0, vV0 );
    FCN_VO(tgCO_ET_Dist_PT)( &sET0, vV0 );
    FCN_VO(tgCO_ET_ClosestSq_PT)( &vV0, &sET0, vV0 );
    FCN_VO(tgCO_ET_Closest_PT)( &vV0, &sET0, vV0 );
    FCN_VO(tgCO_ET_Closest_PM_PT)( &vV0, &vV0, &sET0, vV0 );

    FCN_VO(tgCO_ET_ClosestSq_PM_PT)( &vV0, &vV0, &sET0, vV0 );

    /* Triangle - Line                                                                                                                                                             */
    FCN_VO(tgCO_ST_DistSq_LN) (&sST0, &sLN0 );
    FCN_VO(tgCO_ST_Dist_LN)( &sST0, &sLN0 );
    FCN_VO(tgCO_ST_ClosestSq_LN)( &vV0, &vV0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Closest_LN)( &vV0, &vV0, &sST0, &sLN0 );

    FCN_VO(tgCO_ST_ClosestSq_PM_LN)( &vV0, &vV0, &vV0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Closest_PM_LN)( &vV0, &vV0, &vV0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_ClosestSq_PM_LR00)( &vV0, &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_LN)( &sCL, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Clip_PM_LN)( &vV0, &vV0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Clip_LR00)( &sCL, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_LR00)( &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_F_LN)( &sCL, &iI0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Clip_PM_F_LN)( &vV0, &vV0, &iI0, &sST0, &sLN0 );
    FCN_VO(tgCO_ST_Clip_F_LR00)(&sCL, &iI0, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_F_LR00)( &vV0, &vV0, &iI0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ET_Test_LN)( &sET0, &sLN0 );
    FCN_VO(tgCO_ET_Intersect_LN)( &sPK, &sET0, &sLN0 );

    /* Triangle - Ray                                                                                                                                                              */
    FCN_VO(tgCO_ST_DistSq_RY) (&sST0, &sRY0 );
    FCN_VO(tgCO_ST_Dist_RY)( &sST0, &sRY0 );
    FCN_VO(tgCO_ST_ClosestSq_RY)( &vV0, &vV0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Closest_RY)( &vV0, &vV0, &sST0, &sRY0 );

    FCN_VO(tgCO_ST_ClosestSq_PM_RY)( &vV0, &vV0, &vV0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Closest_PM_RY)( &vV0, &vV0, &vV0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_ClosestSq_PM_LR10)( &vV0, &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_RY)( &sCL, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Clip_PM_RY)( &vV0, &vV0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Clip_LR10)( &sCL, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_LR10)( &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_F_RY)( &sCL, &iI0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Clip_PM_F_RY)( &vV0, &vV0, &iI0, &sST0, &sRY0 );
    FCN_VO(tgCO_ST_Clip_F_LR10)( &sCL, &iI0, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_F_LR10)( &vV0, &vV0, &iI0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ET_Test_RY)( &sET0, &sRY0 );
    FCN_VO(tgCO_ET_Intersect_RY)( &sPK, &sET0, &sRY0 );

    /* Triangle - Segment                                                                                                                                                          */
    FCN_VO(tgCO_ST_DistSq_SG) (&sST0, &sSG0 );
    FCN_VO(tgCO_ST_Dist_SG)( &sST0, &sSG0 );
    FCN_VO(tgCO_ST_ClosestSq_SG)( &vV0, &vV0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Closest_SG)( &vV0, &vV0, &sST0, &sSG0 );

    FCN_VO(tgCO_ST_ClosestSq_PM_SG)( &vV0, &vV0, &vV0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Closest_PM_SG)( &vV0, &vV0, &vV0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_ClosestSq_PM_LR11)( &vV0, &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_SG)( &sCL, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Clip_PM_SG)( &vV0, &vV0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Clip_LR11)( &sCL, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_LR11)( &vV0, &vV0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ST_Clip_F_SG)( &sCL, &iI0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Clip_PM_F_SG)( &vV0, &vV0, &iI0, &sST0, &sSG0 );
    FCN_VO(tgCO_ST_Clip_F_LR11)( &sCL, &iI0, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip_PM_F_LR11)( &vV0, &vV0, &iI0, &sST0, vV0, vV0 );

    FCN_VO(tgCO_ET_Test_SG)( &sET0, &sSG0 );
    FCN_VO(tgCO_ET_Intersect_SG)( &sPK, &sET0, &sSG0 );


    /* Triangle - Triangle                                                                                                                                                         */
    FCN_VO(tgCO_ST_DistSq_ST)( &sST0, &sST0 );
    FCN_VO(tgCO_ST_Dist_ST)( &sST0, &sST0 );
    FCN_VO(tgCO_ST_ClosestSq_ST)( &vV0, &vV0, &sST0, &sST0 );
    FCN_VO(tgCO_ST_Closest_ST)( &vV0, &vV0, &sST0, &sST0 );
    FCN_VO(tgCO_ST_Closest_PM_ST)( &vV0, &vV0, &vV0, &vV0, &sST0, &sST0 );

    FCN_VO(tgCO_PT_Is_Seperating_Axis_PT)( vV0, &sPT0, &sPT0 );

    FCN_VO(tgCO_PT_Axis_ProjInfo)( &sAP, vV0, &sPT0 );

    FCN_VO(tgCO_ST_ClosestSq_PM_ST)( &vV0, &vV0, &vV0, &vV0, &sST0, &sST0 );
    FCN_VO(tgCO_ST_Test_ST)( &sST0, &sST0 );
    FCN_VO(tgCO_ST_Test_Sweep_ST)( &sST0, &sST0, &sDT );
    FCN_VO(tgCO_ST_Intersect_ST)( &sPK, &sST0, &sST0 );
    FCN_VO(tgCO_ST_Sweep_ST)( &sPK, &vV0, &sST0, &sST0, &sDT );

    FCN_VO(tgCO_ST_Clip_PT)( &sCL, &sST0, &sPT0 );

    /* Triangle - Particle                                                                                                                                                         */
    FCN_VO(tgCO_PC_Sweep_ET)( &sPK, &vV0, &sPC0, &sET0, &sDT );
    FCN_VO(tgCO_ET_Sweep_PC)( &sPK, &vV0, &sET0, &sPC0, &sDT );

    /* Triangle Utility                                                                                                                                                            */
    FCN_VO(tgCO_ST_Clip_Points)( &vV0, &vV0, &sST0, vV0, vV0 );
    FCN_VO(tgCO_ST_Clip)( &sCL, &sST0 );

    return (KTgS_OK);
}


/* =============================================================================================================================================================================== */

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"
