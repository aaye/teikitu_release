/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision [Unit Test] - F - Box AA.c_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.12 | »GUID« 964CB1A6-814D-4E19-8E67-A83FCA98BF05 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2023, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */

#if !defined (ENABLE_RELOAD_GUARD)
    #define ENABLE_RELOAD_GUARD
    #if !defined(TEMPLATE__TYPE_SIZE)
        #if TgCOMPILE__NON_NATIVE_VECTOR_AS_NATIVE
            #define TEMPLATE__TYPE_SIZE 64
            #include __FILE__
            #undef TEMPLATE__TYPE_SIZE
        #endif
        #define TEMPLATE__TYPE_SIZE 32
    #endif
    #undef ENABLE_RELOAD_GUARD
#endif

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"


/* == Collision ================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Unit Test Functions                                                                                                                                                            */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

TEST_METHOD( FCN_VO(TEST__COLLISION_BOXAA) )
{
    VEC_T(1)                            vV0;
    VEC_OBJ_T(STg2_CO_Packet)           sPK;
    VEC_OBJ_T(TgDELTA)                  sDT;
    VEC_OBJ_T(TgPTRI)                   sPT0;
    VEC_OBJ_T(TgSPHERE)                 sSP0;
    VEC_OBJ_T(TgPLANE)                  sPN0;
    VEC_OBJ_T(TgBOXAA)                  sBA0;

    vV0 = FCN_V(tgMH_Init_Vector_ELEM)( FCN_F(tgCM_RAND)(), FCN_F(tgCM_RAND)(), FCN_F(tgCM_RAND)() );

    /* Box AA - Point                                                                                                                                                              */
    FCN_VO(tgCO_BA_DistSq_PT)( &sBA0, vV0 );
    FCN_VO(tgCO_BA_Dist_PT)( &sBA0, vV0 );
    FCN_VO(tgCO_BA_ClosestSq_PT)( &vV0, &sBA0, vV0 );
    FCN_VO(tgCO_BA_Closest_PT)( &vV0, &sBA0, vV0 );
    FCN_VO(tgCO_BA_Test_PT)( &sBA0, vV0 );

    /* Box AA - Sphere                                                                                                                                                             */
    FCN_VO(tgCO_BA_DistSq_SP)( &sBA0, &sSP0 );
    FCN_VO(tgCO_BA_Dist_SP)( &sBA0, &sSP0 );
    FCN_VO(tgCO_BA_ClosestSq_SP)( &vV0, &vV0, &sBA0, &sSP0 );
    FCN_VO(tgCO_BA_Closest_SP)( &vV0, &vV0, &sBA0, &sSP0 );
    FCN_VO(tgCO_BA_Test_SP)( &sBA0, &sSP0 );
    FCN_VO(tgCO_BA_Penetrate_SP)( &sPK, &sBA0, &sSP0 );
    FCN_VO(tgCO_SP_Penetrate_BA)( &sPK, &sSP0, &sBA0 );

    /* Box AA - Box AA                                                                                                                                                             */
    FCN_VO(tgCO_BA_DistSq_BA)( &sBA0, &sBA0 );
    FCN_VO(tgCO_BA_Dist_BA)( &sBA0, &sBA0 );
    FCN_VO(tgCO_BA_ClosestSq_BA)( &vV0, &vV0, &sBA0, &sBA0 );
    FCN_VO(tgCO_BA_Closest_BA)( &vV0, &vV0, &sBA0, &sBA0 );
    FCN_VO(tgCO_BA_Sweep_Test_BA)( &sBA0, &sBA0, vV0, vV0 );
    FCN_VO(tgCO_BA_Test_BA)( &sBA0, &sBA0 );
    FCN_VO(tgCO_BA_Test_Elem_BA)( vV0, vV0, vV0, vV0 );
    FCN_VO(tgCO_BA_Penetrate_BA)( &sPK, &sBA0, &sBA0 );

    /* Box AA - Plane                                                                                                                                                              */
    FCN_VO(tgCO_BA_DistSq_PN)( &sBA0, &sPN0 );
    FCN_VO(tgCO_BA_Dist_PN)( &sBA0, &sPN0 );
    FCN_VO(tgCO_BA_ClosestSq_PN)( &vV0, &vV0, &sBA0, &sPN0 );
    FCN_VO(tgCO_BA_Closest_PN)( &vV0, &vV0, &sBA0, &sPN0 );
    FCN_VO(tgCO_BA_Test_PN)( &sBA0, &sPN0 );
    FCN_VO(tgCO_PN_Penetrate_BA)( &sPK, &sPN0, &sBA0 );
    FCN_VO(tgCO_PN_Sweep_BA)( &sPK, &vV0, &sPN0, &sBA0, &sDT );

    /* Box AA - Triangle                                                                                                                                                           */
    FCN_VO(tgCO_BA_Test_PTRI)( &sBA0, &sPT0 );

    return (KTgS_OK);

}


/* =============================================================================================================================================================================== */

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"
