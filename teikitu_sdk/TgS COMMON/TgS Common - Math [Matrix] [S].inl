/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Math [Matrix] [S].inl
    »Author«    Andrew Aye (mailto: teikitu@andrewaye.com, https://www.andrew.aye.page)
    »Version«   5.17 | »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2023, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
#if !defined(TGS_COMMON_MATH_MATRIX_S_INL)

#if !defined (TEMPLATE_TYPE_EXPANSION__RELOAD)
    #error Must be included as part of a type expansion include chain
#endif


/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- FCN_M(tgMH_CLR_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CLR_S)( MAT_S_T(PCU) pmM0 )
{
    tgMM_Set_U08_0x00( pmM0, sizeof( MAT_S_T() ) );
}


/* ---- FCN_M(tgMH_MAX_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_MAX_S)( MAT_S_T(PCU) pmOUT_0, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    #define EQN(A) FCN_V(tgMH_MAX_S)( pmM0->m_avCol[A], pmM1->m_avCol[A] )
    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_MIN_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_MIN_S)( MAT_S_T(PCU) pmOUT_0, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    #define EQN(A) FCN_V(tgMH_MIN_S)( pmM0->m_avCol[A], pmM1->m_avCol[A] )
    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_AND_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_AND_S)( MAT_S_T(PCU) pmOUT_0, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    #define EQN(A) FCN_V(tgMH_AND_S)( pmM0->m_avCol[A], pmM1->m_avCol[A] )
    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_OR_S) --------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_OR_S)( MAT_S_T(PCU) pmOUT_0, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    #define EQN(A) FCN_V(tgMH_OR_S)( pmM0->m_avCol[A], pmM1->m_avCol[A] )
    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_XOR_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_XOR_S)( MAT_S_T(PCU) pmOUT_0, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    #define EQN(A) FCN_V(tgMH_XOR_S)( pmM0->m_avCol[A], pmM1->m_avCol[A] )
    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* =============================================================================================================================================================================== */
#endif
