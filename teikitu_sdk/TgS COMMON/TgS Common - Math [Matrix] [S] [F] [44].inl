/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Math [Matrix] [S] [F] [44].inl
    »Author«    Andrew Aye (mailto: teikitu@andrewaye.com, https://www.andrew.aye.page)
    »Version«   5.17 | »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2023, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
#if !defined(TGS_COMMON_MATH_MATRIX_S_F_44_INL)

#if !defined (TEMPLATE_TYPE_EXPANSION__RELOAD)
    #error Must be included as part of a type expansion include chain
#endif


/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
/*  TgS Common - Math API [Matrix] [S] [F]                                                                                                                                         */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* ---- FCN_M(tgMH_Init_ROT_S) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_ROT_S)( MAT_S_T(PCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    pmM0->_11 = pmM1->_11;
    pmM0->_21 = pmM1->_21;
    pmM0->_31 = pmM1->_31;
    pmM0->_41 = TYPE_K(0);

    pmM0->_12 = pmM1->_12;
    pmM0->_22 = pmM1->_22;
    pmM0->_32 = pmM1->_32;
    pmM0->_42 = TYPE_K(0);

    pmM0->_13 = pmM1->_13;
    pmM0->_23 = pmM1->_23;
    pmM0->_33 = pmM1->_33;
    pmM0->_43 = TYPE_K(0);

    pmM0->_14 = TYPE_K(0);
    pmM0->_24 = TYPE_K(0);
    pmM0->_34 = TYPE_K(0);
    pmM0->_44 = TYPE_K(1);
}

/* ---- FCN_M(tgMH_Init_T_S) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_T_S)( MAT_S_T(PCU) pmM0, VEC_S_T(1,C) vS0 )
{
    pmM0->_11 = TYPE_K(1);
    pmM0->_21 = TYPE_K(0);
    pmM0->_31 = TYPE_K(0);
    pmM0->_41 = vS0.m_aData[0];

    pmM0->_12 = TYPE_K(0);
    pmM0->_22 = TYPE_K(1);
    pmM0->_32 = TYPE_K(0);
    pmM0->_42 = vS0.m_aData[1];

    pmM0->_13 = TYPE_K(0);
    pmM0->_23 = TYPE_K(0);
    pmM0->_33 = TYPE_K(1);
    pmM0->_43 = vS0.m_aData[2];

    pmM0->_14 = TYPE_K(0);
    pmM0->_24 = TYPE_K(0);
    pmM0->_34 = TYPE_K(0);
    pmM0->_44 = TYPE_K(1);
}


/* ---- FCN_M(tgMH_Init_T_ELEM_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_T_ELEM_S)( MAT_S_T(PCU) pmM0, VAR_T(C) fX, VAR_T(C) fY, VAR_T(C) fZ )
{
    pmM0->_11 = TYPE_K(1);
    pmM0->_21 = TYPE_K(0);
    pmM0->_31 = TYPE_K(0);
    pmM0->_41 = fX;

    pmM0->_12 = TYPE_K(0);
    pmM0->_22 = TYPE_K(1);
    pmM0->_32 = TYPE_K(0);
    pmM0->_42 = fY;

    pmM0->_13 = TYPE_K(0);
    pmM0->_23 = TYPE_K(0);
    pmM0->_33 = TYPE_K(1);
    pmM0->_43 = fZ;

    pmM0->_14 = TYPE_K(0);
    pmM0->_24 = TYPE_K(0);
    pmM0->_34 = TYPE_K(0);
    pmM0->_44 = TYPE_K(1);
}


/* ---- FCN_M(tgMH_Init_Euler_S) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Euler_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vEul )
{
    FCN_M(tgMH_Set_Euler_ELEM_S)( pmOut, vEul.x, vEul.y, vEul.z );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Euler_ELEM_S) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Euler_ELEM_S)( MAT_S_T(PCU) pmOut, VAR_T(C)  fX, VAR_T(C)  fY, VAR_T(C)  fZ )
{
    FCN_M(tgMH_Set_Euler_ELEM_S)( pmOut, fX, fY, fZ );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Euler_X_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Euler_X_S)( MAT_S_T(PCU) pmOut, VAR_T(C)  fX )
{
    FCN_M(tgMH_Set_Euler_X_S)( pmOut, fX );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Euler_Y_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Euler_Y_S)( MAT_S_T(PCU) pmOut, VAR_T(C)  fY )
{
    FCN_M(tgMH_Set_Euler_Y_S)( pmOut, fY );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Euler_Z_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Euler_Z_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fZ )
{
    FCN_M(tgMH_Set_Euler_Z_S)( pmOut, fZ );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Quat_S) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Quat_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) pqR0 )
{
    FCN_M(tgMH_Set_Quat_S)( pmOut, pqR0 );
    pmOut->_41 = TYPE_K(0);
    pmOut->_42 = TYPE_K(0);
    pmOut->_43 = TYPE_K(0);
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Basis_From_Vector_And_Position_S) ------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Basis_From_Vector_And_Position_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vAxis, VEC_S_T(1,C) vS0 )
{
    FCN_V(tgMH_Init_Basis_From_Vector_And_Position_S,3)( (VEC_S_T(3,P))pmOut, vAxis, vS0 );
    pmOut->m_avCol[3] = VEC_K(KTgUNIT_W_S);
}


/* ---- FCN_M(tgMH_Init_Reference_Frame_S) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Reference_Frame_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vA0, VEC_S_T(1,C) vA1, VEC_S_T(1,C) vA2, VEC_S_T(1,C) vC0 )
{
    VEC_S_T(4) mM1 = {.m_avCol = { vA0, vA1, vA2, vC0 } };
    VEC_S_T(4) mM2;
    
    FCN_V(tgMH_TR_S,4)( &mM2, &mM1 );

    pmOut->m_avCol[0] = mM2.m_avCol[0];
    pmOut->m_avCol[1] = mM2.m_avCol[1];
    pmOut->m_avCol[2] = mM2.m_avCol[2];
    pmOut->m_avCol[3] = mM2.m_avCol[3];
}


/* ---- FCN_M(tgMH_Is_Valid_Reference_Frame_S) ----------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_M(tgMH_Is_Valid_Reference_Frame_S)( MAT_S_T(CPCU) pmM0 )
{
    VEC_S_T(4) mM1 = {.m_avCol = { pmM0->m_avCol[0], pmM0->m_avCol[1], pmM0->m_avCol[2], pmM0->m_avCol[3] } };
    VEC_S_T(4) mM2;
    
    FCN_V(tgMH_TR_S,4)( &mM2, &mM1 );

    if (!FCN_V(tgMH_Is_Valid_Unit_Vector_S)( mM2.m_avCol[0] ))
        return (false);
    if (!FCN_V(tgMH_Is_Valid_Unit_Vector_S)( mM2.m_avCol[1] ))
        return (false);
    if (!FCN_V(tgMH_Is_Valid_Unit_Vector_S)( mM2.m_avCol[2] ))
        return (false);
    if (!FCN_V(tgMH_Is_Valid_Point_S)( mM2.m_avCol[3] ))
        return (false);

    return (true);
}


/* ---- FCN_M(tgMH_CAT_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CAT_S)( MAT_S_T(PCU) pmOut, MAT_S_T(CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    pmOut->_11 = pmM0->_11 * pmM1->_11 + pmM0->_12 * pmM1->_21 + pmM0->_13 * pmM1->_31 + pmM0->_14 * pmM1->_41;
    pmOut->_12 = pmM0->_11 * pmM1->_12 + pmM0->_12 * pmM1->_22 + pmM0->_13 * pmM1->_32 + pmM0->_14 * pmM1->_42;
    pmOut->_13 = pmM0->_11 * pmM1->_13 + pmM0->_12 * pmM1->_23 + pmM0->_13 * pmM1->_33 + pmM0->_14 * pmM1->_43;
    pmOut->_14 = pmM0->_11 * pmM1->_14 + pmM0->_12 * pmM1->_24 + pmM0->_13 * pmM1->_34 + pmM0->_14 * pmM1->_44;

    pmOut->_21 = pmM0->_21 * pmM1->_11 + pmM0->_22 * pmM1->_21 + pmM0->_23 * pmM1->_31 + pmM0->_24 * pmM1->_41;
    pmOut->_22 = pmM0->_21 * pmM1->_12 + pmM0->_22 * pmM1->_22 + pmM0->_23 * pmM1->_32 + pmM0->_24 * pmM1->_42;
    pmOut->_23 = pmM0->_21 * pmM1->_13 + pmM0->_22 * pmM1->_23 + pmM0->_23 * pmM1->_33 + pmM0->_24 * pmM1->_43;
    pmOut->_24 = pmM0->_21 * pmM1->_14 + pmM0->_22 * pmM1->_24 + pmM0->_23 * pmM1->_34 + pmM0->_24 * pmM1->_44;

    pmOut->_31 = pmM0->_31 * pmM1->_11 + pmM0->_32 * pmM1->_21 + pmM0->_33 * pmM1->_31 + pmM0->_34 * pmM1->_41;
    pmOut->_32 = pmM0->_31 * pmM1->_12 + pmM0->_32 * pmM1->_22 + pmM0->_33 * pmM1->_32 + pmM0->_34 * pmM1->_42;
    pmOut->_33 = pmM0->_31 * pmM1->_13 + pmM0->_32 * pmM1->_23 + pmM0->_33 * pmM1->_33 + pmM0->_34 * pmM1->_43;
    pmOut->_34 = pmM0->_31 * pmM1->_14 + pmM0->_32 * pmM1->_24 + pmM0->_33 * pmM1->_34 + pmM0->_34 * pmM1->_44;

    pmOut->_41 = pmM0->_41 * pmM1->_11 + pmM0->_42 * pmM1->_21 + pmM0->_43 * pmM1->_31 + pmM0->_44 * pmM1->_41;
    pmOut->_42 = pmM0->_41 * pmM1->_12 + pmM0->_42 * pmM1->_22 + pmM0->_43 * pmM1->_32 + pmM0->_44 * pmM1->_42;
    pmOut->_43 = pmM0->_41 * pmM1->_13 + pmM0->_42 * pmM1->_23 + pmM0->_43 * pmM1->_33 + pmM0->_44 * pmM1->_43;
    pmOut->_44 = pmM0->_41 * pmM1->_14 + pmM0->_42 * pmM1->_24 + pmM0->_43 * pmM1->_34 + pmM0->_44 * pmM1->_44;
}


/* ---- FCN_M(tgMH_INV_DET_S) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_INV_DET_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fDet, MAT_S_T(CPCU) pmM1 )
{
    if (FCN_F(tgCM_NR0)( fDet ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Matrix is Singular - Zero Matrix returned." );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fInvDet = TYPE_K(1) / fDet;

        VAR_T(C)        fA3434 = pmM1->_33 * pmM1->_44 - pmM1->_34 * pmM1->_43;
        VAR_T(C)        fA2434 = pmM1->_32 * pmM1->_44 - pmM1->_34 * pmM1->_42;
        VAR_T(C)        fA2334 = pmM1->_32 * pmM1->_43 - pmM1->_33 * pmM1->_42;
        VAR_T(C)        fA1434 = pmM1->_31 * pmM1->_44 - pmM1->_34 * pmM1->_41;
        VAR_T(C)        fA1334 = pmM1->_31 * pmM1->_43 - pmM1->_33 * pmM1->_41;
        VAR_T(C)        fA1234 = pmM1->_31 * pmM1->_42 - pmM1->_32 * pmM1->_41;
        VAR_T(C)        fA3424 = pmM1->_23 * pmM1->_44 - pmM1->_24 * pmM1->_43;
        VAR_T(C)        fA2424 = pmM1->_22 * pmM1->_44 - pmM1->_24 * pmM1->_42;
        VAR_T(C)        fA2324 = pmM1->_22 * pmM1->_43 - pmM1->_23 * pmM1->_42;
        VAR_T(C)        fA3423 = pmM1->_23 * pmM1->_34 - pmM1->_24 * pmM1->_33;
        VAR_T(C)        fA2423 = pmM1->_22 * pmM1->_34 - pmM1->_24 * pmM1->_32;
        VAR_T(C)        fA2323 = pmM1->_22 * pmM1->_33 - pmM1->_23 * pmM1->_32;
        VAR_T(C)        fA1424 = pmM1->_21 * pmM1->_44 - pmM1->_24 * pmM1->_41;
        VAR_T(C)        fA1324 = pmM1->_21 * pmM1->_43 - pmM1->_23 * pmM1->_41;
        VAR_T(C)        fA1423 = pmM1->_21 * pmM1->_34 - pmM1->_24 * pmM1->_31;
        VAR_T(C)        fA1323 = pmM1->_21 * pmM1->_33 - pmM1->_23 * pmM1->_31;
        VAR_T(C)        fA1224 = pmM1->_21 * pmM1->_42 - pmM1->_22 * pmM1->_41;
        VAR_T(C)        fA1223 = pmM1->_21 * pmM1->_32 - pmM1->_22 * pmM1->_31;

        pmOut->_11 = fInvDet *   ( pmM1->_22 * fA3434 - pmM1->_23 * fA2434 + pmM1->_24 * fA2334 );
        pmOut->_12 = fInvDet * - ( pmM1->_12 * fA3434 - pmM1->_13 * fA2434 + pmM1->_14 * fA2334 );
        pmOut->_13 = fInvDet *   ( pmM1->_12 * fA3424 - pmM1->_13 * fA2424 + pmM1->_14 * fA2324 );
        pmOut->_14 = fInvDet * - ( pmM1->_12 * fA3423 - pmM1->_13 * fA2423 + pmM1->_14 * fA2323 );
        pmOut->_21 = fInvDet * - ( pmM1->_21 * fA3434 - pmM1->_23 * fA1434 + pmM1->_24 * fA1334 );
        pmOut->_22 = fInvDet *   ( pmM1->_11 * fA3434 - pmM1->_13 * fA1434 + pmM1->_14 * fA1334 );
        pmOut->_23 = fInvDet * - ( pmM1->_11 * fA3424 - pmM1->_13 * fA1424 + pmM1->_14 * fA1324 );
        pmOut->_24 = fInvDet *   ( pmM1->_11 * fA3423 - pmM1->_13 * fA1423 + pmM1->_14 * fA1323 );
        pmOut->_31 = fInvDet *   ( pmM1->_21 * fA2434 - pmM1->_22 * fA1434 + pmM1->_24 * fA1234 );
        pmOut->_32 = fInvDet * - ( pmM1->_11 * fA2434 - pmM1->_12 * fA1434 + pmM1->_14 * fA1234 );
        pmOut->_33 = fInvDet *   ( pmM1->_11 * fA2424 - pmM1->_12 * fA1424 + pmM1->_14 * fA1224 );
        pmOut->_34 = fInvDet * - ( pmM1->_11 * fA2423 - pmM1->_12 * fA1423 + pmM1->_14 * fA1223 );
        pmOut->_41 = fInvDet * - ( pmM1->_21 * fA2334 - pmM1->_22 * fA1334 + pmM1->_23 * fA1234 );
        pmOut->_42 = fInvDet *   ( pmM1->_11 * fA2334 - pmM1->_12 * fA1334 + pmM1->_13 * fA1234 );
        pmOut->_43 = fInvDet * - ( pmM1->_11 * fA2324 - pmM1->_12 * fA1324 + pmM1->_13 * fA1224 );
        pmOut->_44 = fInvDet *   ( pmM1->_11 * fA2323 - pmM1->_12 * fA1323 + pmM1->_13 * fA1223 );
    };
}


/* ---- FCN_M(tgMH_INV_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_INV_S)( MAT_S_T(PCU) pmOut, MAT_S_T(CPCU) pmM1 )
{
    VAR_T(C)        fA3434 = pmM1->_33 * pmM1->_44 - pmM1->_34 * pmM1->_43;
    VAR_T(C)        fA2434 = pmM1->_32 * pmM1->_44 - pmM1->_34 * pmM1->_42;
    VAR_T(C)        fA2334 = pmM1->_32 * pmM1->_43 - pmM1->_33 * pmM1->_42;
    VAR_T(C)        fA1434 = pmM1->_31 * pmM1->_44 - pmM1->_34 * pmM1->_41;
    VAR_T(C)        fA1334 = pmM1->_31 * pmM1->_43 - pmM1->_33 * pmM1->_41;
    VAR_T(C)        fA1234 = pmM1->_31 * pmM1->_42 - pmM1->_32 * pmM1->_41;

    VAR_T(C)        fDet = pmM1->_11 * ( pmM1->_22 * fA3434 - pmM1->_23 * fA2434 + pmM1->_24 * fA2334 )
                         - pmM1->_12 * ( pmM1->_21 * fA3434 - pmM1->_23 * fA1434 + pmM1->_24 * fA1334 )
                         + pmM1->_13 * ( pmM1->_21 * fA2434 - pmM1->_22 * fA1434 + pmM1->_24 * fA1234 )
                         - pmM1->_14 * ( pmM1->_21 * fA2334 - pmM1->_22 * fA1334 + pmM1->_23 * fA1234 );

    if (FCN_F(tgCM_NR0)( fDet ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Matrix is Singular - Zero Matrix returned." );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fA3424 = pmM1->_23 * pmM1->_44 - pmM1->_24 * pmM1->_43;
        VAR_T(C)        fA2424 = pmM1->_22 * pmM1->_44 - pmM1->_24 * pmM1->_42;
        VAR_T(C)        fA2324 = pmM1->_22 * pmM1->_43 - pmM1->_23 * pmM1->_42;
        VAR_T(C)        fA3423 = pmM1->_23 * pmM1->_34 - pmM1->_24 * pmM1->_33;
        VAR_T(C)        fA2423 = pmM1->_22 * pmM1->_34 - pmM1->_24 * pmM1->_32;
        VAR_T(C)        fA2323 = pmM1->_22 * pmM1->_33 - pmM1->_23 * pmM1->_32;
        VAR_T(C)        fA1424 = pmM1->_21 * pmM1->_44 - pmM1->_24 * pmM1->_41;
        VAR_T(C)        fA1324 = pmM1->_21 * pmM1->_43 - pmM1->_23 * pmM1->_41;
        VAR_T(C)        fA1423 = pmM1->_21 * pmM1->_34 - pmM1->_24 * pmM1->_31;
        VAR_T(C)        fA1323 = pmM1->_21 * pmM1->_33 - pmM1->_23 * pmM1->_31;
        VAR_T(C)        fA1224 = pmM1->_21 * pmM1->_42 - pmM1->_22 * pmM1->_41;
        VAR_T(C)        fA1223 = pmM1->_21 * pmM1->_32 - pmM1->_22 * pmM1->_31;

        VAR_T(C)        fInvDet = TYPE_K(1) / fDet;

        pmOut->_11 = fInvDet *   ( pmM1->_22 * fA3434 - pmM1->_23 * fA2434 + pmM1->_24 * fA2334 );
        pmOut->_12 = fInvDet * - ( pmM1->_12 * fA3434 - pmM1->_13 * fA2434 + pmM1->_14 * fA2334 );
        pmOut->_13 = fInvDet *   ( pmM1->_12 * fA3424 - pmM1->_13 * fA2424 + pmM1->_14 * fA2324 );
        pmOut->_14 = fInvDet * - ( pmM1->_12 * fA3423 - pmM1->_13 * fA2423 + pmM1->_14 * fA2323 );
        pmOut->_21 = fInvDet * - ( pmM1->_21 * fA3434 - pmM1->_23 * fA1434 + pmM1->_24 * fA1334 );
        pmOut->_22 = fInvDet *   ( pmM1->_11 * fA3434 - pmM1->_13 * fA1434 + pmM1->_14 * fA1334 );
        pmOut->_23 = fInvDet * - ( pmM1->_11 * fA3424 - pmM1->_13 * fA1424 + pmM1->_14 * fA1324 );
        pmOut->_24 = fInvDet *   ( pmM1->_11 * fA3423 - pmM1->_13 * fA1423 + pmM1->_14 * fA1323 );
        pmOut->_31 = fInvDet *   ( pmM1->_21 * fA2434 - pmM1->_22 * fA1434 + pmM1->_24 * fA1234 );
        pmOut->_32 = fInvDet * - ( pmM1->_11 * fA2434 - pmM1->_12 * fA1434 + pmM1->_14 * fA1234 );
        pmOut->_33 = fInvDet *   ( pmM1->_11 * fA2424 - pmM1->_12 * fA1424 + pmM1->_14 * fA1224 );
        pmOut->_34 = fInvDet * - ( pmM1->_11 * fA2423 - pmM1->_12 * fA1423 + pmM1->_14 * fA1223 );
        pmOut->_41 = fInvDet * - ( pmM1->_21 * fA2334 - pmM1->_22 * fA1334 + pmM1->_23 * fA1234 );
        pmOut->_42 = fInvDet *   ( pmM1->_11 * fA2334 - pmM1->_12 * fA1334 + pmM1->_13 * fA1234 );
        pmOut->_43 = fInvDet * - ( pmM1->_11 * fA2324 - pmM1->_12 * fA1324 + pmM1->_13 * fA1224 );
        pmOut->_44 = fInvDet *   ( pmM1->_11 * fA2323 - pmM1->_12 * fA1323 + pmM1->_13 * fA1223 );
    };
}


/* ---- FCN_M(tgMH_DET_S) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_M(tgMH_DET_S)( MAT_S_T(CPCU) pmM1 )
{
    VAR_T(C) f0 = pmM1->_11 * (pmM1->_22 * (pmM1->_33 * pmM1->_44 - pmM1->_43 * pmM1->_34) + pmM1->_32 * (pmM1->_43 * pmM1->_24 - pmM1->_23 * pmM1->_44) + pmM1->_42 * (pmM1->_23 * pmM1->_34 - pmM1->_33 * pmM1->_24));
    VAR_T(C) f1 = pmM1->_21 * (pmM1->_32 * (pmM1->_43 * pmM1->_14 - pmM1->_13 * pmM1->_44) + pmM1->_42 * (pmM1->_13 * pmM1->_34 - pmM1->_33 * pmM1->_14) + pmM1->_12 * (pmM1->_33 * pmM1->_44 - pmM1->_43 * pmM1->_34));
    VAR_T(C) f2 = pmM1->_31 * (pmM1->_42 * (pmM1->_13 * pmM1->_24 - pmM1->_23 * pmM1->_14) + pmM1->_12 * (pmM1->_23 * pmM1->_44 - pmM1->_43 * pmM1->_24) + pmM1->_22 * (pmM1->_43 * pmM1->_14 - pmM1->_13 * pmM1->_44));
    VAR_T(C) f3 = pmM1->_41 * (pmM1->_12 * (pmM1->_23 * pmM1->_34 - pmM1->_33 * pmM1->_24) + pmM1->_22 * (pmM1->_33 * pmM1->_14 - pmM1->_13 * pmM1->_34) + pmM1->_32 * (pmM1->_13 * pmM1->_24 - pmM1->_23 * pmM1->_14));

    VAR_T(C) fDet = (f0 - f1) + (f2 - f3);
    return (fDet);
}


/* ---- FCN_M(tgMH_TX_S) --------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_TX_S)( VEC_S_T(1,C) vARG_0, MAT_S_T(CPCU) pmTX )
{
    VEC_S_T(1)                          vRet;

    vRet.x = FCN_V(tgMH_DOT_S)( pmTX->m_avCol[0], vARG_0 );
    vRet.y = FCN_V(tgMH_DOT_S)( pmTX->m_avCol[1], vARG_0 );
    vRet.z = FCN_V(tgMH_DOT_S)( pmTX->m_avCol[2], vARG_0 );
    vRet.w = FCN_V(tgMH_DOT_S)( pmTX->m_avCol[3], vARG_0 );

    return (vRet);
}


/* ---- FCN_M(tgMH_TX_P_S) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_TX_P_S)( VEC_S_T(1,C) vARG_0, MAT_S_T(CPCU) pmTX )
{
    VEC_S_T(1)                          vRet;

    vRet.x = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[0], vARG_0 ) + pmTX->_41;
    vRet.y = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[1], vARG_0 ) + pmTX->_42;
    vRet.z = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[2], vARG_0 ) + pmTX->_43;
    vRet.w = TYPE_K(1);

    return (vRet);
}


/* ---- FCN_M(tgMH_TX_V_S) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_TX_V_S)( VEC_S_T(1,C) vARG_0, MAT_S_T(CPCU) pmTX )
{
    VEC_S_T(1)                          vRet;

    vRet.x = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[0], vARG_0 );
    vRet.y = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[1], vARG_0 );
    vRet.z = FCN_V(tgMH_DOT3_S)( pmTX->m_avCol[2], vARG_0 );
    vRet.w = TYPE_K(0);

    return (vRet);
}


/* ---- FCN_M(tgMH_Query_Row_0_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Row_0_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_11, pmM0->_12, pmM0->_13, pmM0->_14));
}


/* ---- FCN_M(tgMH_Query_Row_1_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Row_1_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_21, pmM0->_22, pmM0->_23, pmM0->_24));
}


/* ---- FCN_M(tgMH_Query_Row_2_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Row_2_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_31, pmM0->_32, pmM0->_33, pmM0->_34));
}


/* ---- FCN_M(tgMH_Query_Row_3_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Row_3_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_41, pmM0->_42, pmM0->_43, pmM0->_44));
}


/* ---- FCN_M(tgMH_Query_Col_0_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Col_0_S)( MAT_S_T(CPCU) pmM0 )
{
    return (pmM0->m_avCol[0]);
}


/* ---- FCN_M(tgMH_Query_Col_1_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Col_1_S)( MAT_S_T(CPCU) pmM0 )
{
    return (pmM0->m_avCol[1]);
}


/* ---- FCN_M(tgMH_Query_Col_2_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Col_2_S)( MAT_S_T(CPCU) pmM0 )
{
    return (pmM0->m_avCol[2]);
}


/* ---- FCN_M(tgMH_Query_Col_3_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Col_3_S)( MAT_S_T(CPCU) pmM0 )
{
    return (pmM0->m_avCol[3]);
}


/* ---- FCN_M(tgMH_Query_Axis_0_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Axis_0_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_11, pmM0->_12, pmM0->_13, pmM0->_14 ));
}


/* ---- FCN_M(tgMH_Query_Axis_1_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Axis_1_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_21, pmM0->_22, pmM0->_23, pmM0->_24 ));
}


/* ---- FCN_M(tgMH_Query_Axis_2_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Axis_2_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_31, pmM0->_32, pmM0->_33, pmM0->_34 ));
}


/* ---- FCN_M(tgMH_Query_Axis_3_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_S_T(1) FCN_M(tgMH_Query_Axis_3_S)( MAT_S_T(CPCU) pmM0 )
{
    return (FCN_V(tgMH_Init_ELEM_S)(pmM0->_41, pmM0->_42, pmM0->_43, pmM0->_44 ));
}


/* ---- FCN_M(tgMH_Query_Reference_Frame_S) -------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Query_Reference_Frame_S)( VEC_S_T(1,PCU) pvA0, VEC_S_T(1,PCU) pvA1, VEC_S_T(1,PCU) pvA2, VEC_S_T(1,PCU) pvC0, MAT_S_T(CPCU) pmM0 )
{
    VEC_S_T(4) mM1 = {.m_avCol = { pmM0->m_avCol[0], pmM0->m_avCol[1], pmM0->m_avCol[2], pmM0->m_avCol[3] } };
    VEC_S_T(4) mM2;
    
    FCN_V(tgMH_TR_S,4)( &mM2, &mM1 );

    *pvA0 = mM2.m_avCol[0];
    *pvA1 = mM2.m_avCol[1];
    *pvA2 = mM2.m_avCol[2];
    *pvC0 = mM2.m_avCol[3];
}


/* ---- FCN_M(tgMH_Matrix_To_Euler_ELEM_S) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Matrix_To_Euler_ELEM_S)( VAR_T(P) pfX, VAR_T(P) pfY, VAR_T(P) pfZ, MAT_S_T(CPC) pxR0 )
{
    FCN_V(tgMH_Matrix_To_Euler_ELEM_S,3)( pfX, pfY, pfZ, (VEC_S_T(3,CP))pxR0 );
}


/* ---- FCN_M(tgMH_Matrix_To_Euler_S) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Matrix_To_Euler_S)( VEC_S_T(1,PCU) pvEul, MAT_S_T(CPC) pxR0 )
{
    FCN_V(tgMH_Matrix_To_Euler_S,3)( pvEul, (VEC_S_T(3,CP))pxR0 );
}


/* ---- FCN_M(tgMH_Matrix_To_Quat_S) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Matrix_To_Quat_S)( VEC_S_T(1,PCU) pvEul, MAT_S_T(CPC) pxR0 )
{
    FCN_V(tgMH_Matrix_To_Quat_S,3)( pvEul, (VEC_S_T(3,CP))pxR0 );
}




/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
/*  TgS Common - Math API [Matrix] [S] [F] [44]                                                                                                                                    */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* ---- FCN_M(tgMH_CAT_34_44_S) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CAT_34_44_S)( MAT_S_T(PCU) pmOut, VEC_S_T(3,CPCU) pmM0, MAT_S_T(CPCU) pmM1 )
{
    pmOut->_11 = pmM0->_11 * pmM1->_11 + pmM0->_12 * pmM1->_21 + pmM0->_13 * pmM1->_31;
    pmOut->_12 = pmM0->_11 * pmM1->_12 + pmM0->_12 * pmM1->_22 + pmM0->_13 * pmM1->_32;
    pmOut->_13 = pmM0->_11 * pmM1->_13 + pmM0->_12 * pmM1->_23 + pmM0->_13 * pmM1->_33;
    pmOut->_14 = pmM0->_11 * pmM1->_14 + pmM0->_12 * pmM1->_24 + pmM0->_13 * pmM1->_34;

    pmOut->_21 = pmM0->_21 * pmM1->_11 + pmM0->_22 * pmM1->_21 + pmM0->_23 * pmM1->_31;
    pmOut->_22 = pmM0->_21 * pmM1->_12 + pmM0->_22 * pmM1->_22 + pmM0->_23 * pmM1->_32;
    pmOut->_23 = pmM0->_21 * pmM1->_13 + pmM0->_22 * pmM1->_23 + pmM0->_23 * pmM1->_33;
    pmOut->_24 = pmM0->_21 * pmM1->_14 + pmM0->_22 * pmM1->_24 + pmM0->_23 * pmM1->_34;

    pmOut->_31 = pmM0->_31 * pmM1->_11 + pmM0->_32 * pmM1->_21 + pmM0->_33 * pmM1->_31;
    pmOut->_32 = pmM0->_31 * pmM1->_12 + pmM0->_32 * pmM1->_22 + pmM0->_33 * pmM1->_32;
    pmOut->_33 = pmM0->_31 * pmM1->_13 + pmM0->_32 * pmM1->_23 + pmM0->_33 * pmM1->_33;
    pmOut->_34 = pmM0->_31 * pmM1->_14 + pmM0->_32 * pmM1->_24 + pmM0->_33 * pmM1->_34;

    pmOut->_41 = pmM0->_41 * pmM1->_11 + pmM0->_42 * pmM1->_21 + pmM0->_43 * pmM1->_31 + pmM1->_41;
    pmOut->_42 = pmM0->_41 * pmM1->_12 + pmM0->_42 * pmM1->_22 + pmM0->_43 * pmM1->_32 + pmM1->_42;
    pmOut->_43 = pmM0->_41 * pmM1->_13 + pmM0->_42 * pmM1->_23 + pmM0->_43 * pmM1->_33 + pmM1->_43;
    pmOut->_44 = pmM0->_41 * pmM1->_14 + pmM0->_42 * pmM1->_24 + pmM0->_43 * pmM1->_34 + pmM1->_44;
}


/* ---- FCN_M(tgMH_CAT_44_34_S) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CAT_44_34_S)( MAT_S_T(PCU) pmOut, MAT_S_T(CPCU) pmM0, VEC_S_T(3,CPCU) pmM1 )
{
    pmOut->_11 = pmM0->_11 * pmM1->_11 + pmM0->_12 * pmM1->_21 + pmM0->_13 * pmM1->_31 + pmM0->_14 * pmM1->_41;
    pmOut->_12 = pmM0->_11 * pmM1->_12 + pmM0->_12 * pmM1->_22 + pmM0->_13 * pmM1->_32 + pmM0->_14 * pmM1->_42;
    pmOut->_13 = pmM0->_11 * pmM1->_13 + pmM0->_12 * pmM1->_23 + pmM0->_13 * pmM1->_33 + pmM0->_14 * pmM1->_43;
    pmOut->_14 = pmM0->_14;

    pmOut->_21 = pmM0->_21 * pmM1->_11 + pmM0->_22 * pmM1->_21 + pmM0->_23 * pmM1->_31 + pmM0->_24 * pmM1->_41;
    pmOut->_22 = pmM0->_21 * pmM1->_12 + pmM0->_22 * pmM1->_22 + pmM0->_23 * pmM1->_32 + pmM0->_24 * pmM1->_42;
    pmOut->_23 = pmM0->_21 * pmM1->_13 + pmM0->_22 * pmM1->_23 + pmM0->_23 * pmM1->_33 + pmM0->_24 * pmM1->_43;
    pmOut->_24 = pmM0->_24;

    pmOut->_31 = pmM0->_31 * pmM1->_11 + pmM0->_32 * pmM1->_21 + pmM0->_33 * pmM1->_31 + pmM0->_34 * pmM1->_41;
    pmOut->_32 = pmM0->_31 * pmM1->_12 + pmM0->_32 * pmM1->_22 + pmM0->_33 * pmM1->_32 + pmM0->_34 * pmM1->_42;
    pmOut->_33 = pmM0->_31 * pmM1->_13 + pmM0->_32 * pmM1->_23 + pmM0->_33 * pmM1->_33 + pmM0->_34 * pmM1->_43;
    pmOut->_34 = pmM0->_34;

    pmOut->_41 = pmM0->_41 * pmM1->_11 + pmM0->_42 * pmM1->_21 + pmM0->_43 * pmM1->_31 + pmM0->_44 * pmM1->_41;
    pmOut->_42 = pmM0->_41 * pmM1->_12 + pmM0->_42 * pmM1->_22 + pmM0->_43 * pmM1->_32 + pmM0->_44 * pmM1->_42;
    pmOut->_43 = pmM0->_41 * pmM1->_13 + pmM0->_42 * pmM1->_23 + pmM0->_43 * pmM1->_33 + pmM0->_44 * pmM1->_43;
    pmOut->_44 = pmM0->_44;
}


/* ---- FCN_M(tgMH_TR_S) --------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_TR_S)( MAT_S_T(PCU) pxTX, MAT_S_T(CPCU) pmM0 )
{
    pxTX->m_aColRow[0][0] = pmM0->m_aColRow[0][0];
    pxTX->m_aColRow[0][1] = pmM0->m_aColRow[1][0];
    pxTX->m_aColRow[0][2] = pmM0->m_aColRow[2][0];
    pxTX->m_aColRow[0][3] = pmM0->m_aColRow[3][0];

    pxTX->m_aColRow[1][0] = pmM0->m_aColRow[0][1];
    pxTX->m_aColRow[1][1] = pmM0->m_aColRow[1][1];
    pxTX->m_aColRow[1][2] = pmM0->m_aColRow[2][1];
    pxTX->m_aColRow[1][3] = pmM0->m_aColRow[3][1];

    pxTX->m_aColRow[2][0] = pmM0->m_aColRow[0][2];
    pxTX->m_aColRow[2][1] = pmM0->m_aColRow[1][2];
    pxTX->m_aColRow[2][2] = pmM0->m_aColRow[2][2];
    pxTX->m_aColRow[2][3] = pmM0->m_aColRow[3][2];

    pxTX->m_aColRow[3][0] = pmM0->m_aColRow[0][3];
    pxTX->m_aColRow[3][1] = pmM0->m_aColRow[1][3];
    pxTX->m_aColRow[3][2] = pmM0->m_aColRow[2][3];
    pxTX->m_aColRow[3][3] = pmM0->m_aColRow[3][3];
}


/* ---- FCN_M(tgMH_LookLH_S) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_LookLH_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vFrom, VEC_S_T(1,C) vTo, VEC_S_T(1,C) vUp )
{
    VEC_S_T(1)                          vLook, vRight, vCamUp;
    VAR_T()                             fLength, fX0, fX1, fX2;

    /* VectorNorm and Build Orthonormal Camera Axis */
    vLook = FCN_V(tgMH_SUB_S)( vTo, vFrom );
    vLook = FCN_V(tgMH_NORM_LEN_S)( &fLength, vLook );
    if (FCN_F(tgPM_NAN)(fLength) || FCN_F(tgCM_NR0)(fLength))
    {
        FCN_M(tgMH_CLI_S)(pmOut);
        return;
    };

    vRight = FCN_V(tgMH_UCX_LEN_S)( &fLength, vUp, vLook );
    if (FCN_F(tgPM_NAN)(fLength) || FCN_F(tgCM_NR0)(fLength))
    {
        vCamUp.x = vUp.y;
        vCamUp.y = vUp.x;
        vCamUp.z = vUp.z;
        vCamUp.w = TYPE_K(0);

        vRight = FCN_V(tgMH_UCX_LEN_S)( &fLength, vCamUp, vLook );
        if (FCN_F(tgPM_NAN)(fLength) || FCN_F(tgCM_NR0)(fLength))
        {
            vCamUp.x = vUp.x;
            vCamUp.y = vUp.z;
            vCamUp.z = vUp.y;
            vCamUp.w = TYPE_K(0);

            vRight = FCN_V(tgMH_UCX_LEN_S)( &fLength, vCamUp, vLook );
            if (FCN_F(tgPM_NAN)(fLength) || FCN_F(tgCM_NR0)(fLength))
            {
                FCN_M(tgMH_CLI_S)(pmOut);
                return;
            };
        };
    };

    vCamUp = FCN_V(tgMH_CX_S)( vLook, vRight );

    fX0 = -FCN_V(tgMH_DOT_S)( vRight, vFrom );
    fX1 = -FCN_V(tgMH_DOT_S)( vCamUp, vFrom );
    fX2 = -FCN_V(tgMH_DOT_S)( vLook, vFrom );

    pmOut->_11 = vRight.x;      pmOut->_12 = vCamUp.x;      pmOut->_13 = vLook.x;       pmOut->_14 = TYPE_K(0);
    pmOut->_21 = vRight.y;      pmOut->_22 = vCamUp.y;      pmOut->_23 = vLook.y;       pmOut->_24 = TYPE_K(0);
    pmOut->_31 = vRight.z;      pmOut->_32 = vCamUp.z;      pmOut->_33 = vLook.z;       pmOut->_34 = TYPE_K(0);
    pmOut->_41 = fX0;           pmOut->_42 = fX1;           pmOut->_43 = fX2;           pmOut->_44 = TYPE_K(1);
}


/* ---- FCN_M(tgMH_LookRH_S) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_LookRH_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vFrom, VEC_S_T(1,C) vTo, VEC_S_T(1,C) vUp )
{
    VEC_S_T(1)                          vLook, vRight, vCamUp;
    VAR_T()                             fLength, fX0, fX1, fX2;

    /* VectorNorm and Build Orthonormal Camera Axis */
    vLook = FCN_V(tgMH_SUB_S)( vFrom, vTo );
    vLook = FCN_V(tgMH_NORM_LEN_S)( &fLength, vLook );
    if (FCN_F(tgCM_NR0)(fLength))
    {
        FCN_M(tgMH_CLI_S)(pmOut);
        return;
    };

    vRight = FCN_V(tgMH_UCX_LEN_S)( &fLength, vUp, vLook );
    if (FCN_F(tgCM_NR0)(fLength))
    {
        FCN_M(tgMH_CLI_S)(pmOut);
        return;
    };

    vCamUp = FCN_V(tgMH_CX_S)( vLook, vRight );

    fX0 = FCN_V(tgMH_DOT_S)( vRight, vFrom );
    fX1 = FCN_V(tgMH_DOT_S)( vCamUp, vFrom );
    fX2 = FCN_V(tgMH_DOT_S)( vLook, vFrom );

    pmOut->_11 = vRight.x;      pmOut->_12 = vCamUp.x;      pmOut->_13 = vLook.x;       pmOut->_14 = TYPE_K(0);
    pmOut->_21 = vRight.y;      pmOut->_22 = vCamUp.y;      pmOut->_23 = vLook.y;       pmOut->_24 = TYPE_K(0);
    pmOut->_31 = vRight.z;      pmOut->_32 = vCamUp.z;      pmOut->_33 = vLook.z;       pmOut->_34 = TYPE_K(0);
    pmOut->_41 = fX0;           pmOut->_42 = fX1;           pmOut->_43 = fX2;           pmOut->_44 = TYPE_K(1);
}


/* ---- FCN_M(tgMH_Look_S) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Look_S)( MAT_S_T(PCU) pmOut, VEC_S_T(1,C) vFrom, VEC_S_T(1,C) vTo, VEC_S_T(1,C) vUp )
{
    FCN_M(tgMH_LookLH_S)(pmOut, vFrom, vTo, vUp);
}


/* ---- FCN_M(tgMH_PProjLH_S) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProjLH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    VAR_T(C)        fInvZR = fMaxZ > fMinZ ? TYPE_K(1) / (fMaxZ - fMinZ) : TYPE_K(0);
    VAR_T(C)        fFoVx = (fMinZ + fMinZ) / fViewWidth;
    VAR_T(C)        fFoVy = (fMinZ + fMinZ) / fViewHeight;

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_33 = fMaxZ * fInvZR;
    pmOut->_34 = TYPE_K(1);
    pmOut->_43 = -fMinZ * fMaxZ * fInvZR;
}


/* ---- FCN_M(tgMH_PProjRH_S) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProjRH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    VAR_T(C)        fInvZR = fMaxZ > fMinZ ? TYPE_K(1) / (fMaxZ - fMinZ) : TYPE_K(0);
    VAR_T(C)        fFoVx = (fMinZ + fMinZ) / fViewWidth;
    VAR_T(C)        fFoVy = (fMinZ + fMinZ) / fViewHeight;

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_33 = fMaxZ * fInvZR;
    pmOut->_34 = -TYPE_K(1);
    pmOut->_43 = fMinZ * fMaxZ * fInvZR;
}


/* ---- FCN_M(tgMH_PProj_S) ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    FCN_M(tgMH_PProjLH_S)(pmOut, fViewWidth, fViewHeight, fMinZ, fMaxZ);
}


/* ---- FCN_M(tgMH_PProj_OffsetLH_S) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_OffsetLH_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    VAR_T(C)        fXR = fRight - fLeft;
    VAR_T(C)        fYR = fTop - fBottom;
    VAR_T(C)        fZR = fMaxZ - fMinZ;
    VAR_T(C)        fFoVx = TYPE_K(2,0) * fMinZ * (fXR > TYPE_K(0) ? TYPE_K(1) / fXR : TYPE_K(0));
    VAR_T(C)        fFoVy = TYPE_K(2,0) * fMinZ * (fYR > TYPE_K(0) ? TYPE_K(1) / fYR : TYPE_K(0));
    VAR_T(C)        fFoVz = fMaxZ * (fZR > TYPE_K(0) ? TYPE_K(1) / fZR : TYPE_K(0));

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_31 = (fLeft + fRight) * (fXR > TYPE_K(0) ? -TYPE_K(1) / fXR : TYPE_K(0));
    pmOut->_32 = (fTop + fBottom) * (fYR > TYPE_K(0) ? -TYPE_K(1) / fYR : TYPE_K(0));
    pmOut->_33 = fFoVz;
    pmOut->_34 = TYPE_K(1);
    pmOut->_43 = -fFoVz * fMinZ;
}


/* ---- FCN_M(tgMH_PProj_OffsetRH_S) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_OffsetRH_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    VAR_T(C)        fXR = fRight - fLeft;
    VAR_T(C)        fYR = fTop - fBottom;
    VAR_T(C)        fZR = fMaxZ - fMinZ;
    VAR_T(C)        fFoVx = TYPE_K(2,0) * fMinZ * (fXR > TYPE_K(0) ? TYPE_K(1) / fXR : TYPE_K(0));
    VAR_T(C)        fFoVy = TYPE_K(2,0) * fMinZ * (fYR > TYPE_K(0) ? TYPE_K(1) / fYR : TYPE_K(0));
    VAR_T(C)        fFoVz = fMaxZ * (fZR > TYPE_K(0) ? TYPE_K(1) / fZR : TYPE_K(0));

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_31 = (fLeft + fRight) * (fXR > TYPE_K(0) ? TYPE_K(1) / fXR : TYPE_K(0));
    pmOut->_32 = (fTop + fBottom) * (fYR > TYPE_K(0) ? TYPE_K(1) / fYR : TYPE_K(0));
    pmOut->_33 = fFoVz;
    pmOut->_34 = -TYPE_K(1);
    pmOut->_43 = fFoVz * fMinZ;
}


/* ---- FCN_M(tgMH_PProj_Offset_S) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_Offset_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    FCN_M(tgMH_PProj_OffsetLH_S)(pmOut, fRight, fLeft, fTop, fBottom, fMinZ, fMaxZ);
}


/* ---- FCN_M(tgMH_PProj_FoVLH_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_FoVLH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fFoV, VAR_T(C) fAspect, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    VAR_T(C)        fFoVy = TYPE_K(1) / FCN_F(tgPM_TAN)( TYPE_K(0,5) * fFoV );
    VAR_T(C)        fFoVx = fFoVy / fAspect;
    VAR_T(C)        fZR = fMaxZ - fMinZ;
    VAR_T(C)        fFoVz = fMaxZ * (fZR > TYPE_K(0) ? TYPE_K(1) / fZR : TYPE_K(0));

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_33 = fFoVz;
    pmOut->_34 = TYPE_K(1);
    pmOut->_43 = -fFoVz * fMinZ;
}


/* ---- FCN_M(tgMH_PProj_FoVRH_S) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_FoVRH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fFoV, VAR_T(C) fAspect, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{

    VAR_T(C)        fFoVy = TYPE_K(1) / FCN_F(tgPM_TAN)( TYPE_K(0,5) * fFoV );
    VAR_T(C)        fFoVx = fFoVy / fAspect;
    VAR_T(C)        fZR = fMaxZ - fMinZ;
    VAR_T(C)        fFoVz = fMaxZ * (fZR > TYPE_K(0) ? TYPE_K(1) / fZR : TYPE_K(0));

    FCN_M(tgMH_CLR_S)(pmOut);

    pmOut->_11 = fFoVx;
    pmOut->_22 = fFoVy;
    pmOut->_33 = fFoVz;
    pmOut->_34 = -TYPE_K(1);
    pmOut->_43 = fFoVz * fMinZ;
}


/* ---- FCN_M(tgMH_PProj_FoV_S) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_PProj_FoV_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fFoV, VAR_T(C) fAspect, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    FCN_M(tgMH_PProj_FoVLH_S)(pmOut, fFoV, fAspect, fMinZ, fMaxZ);
}


/* ---- FCN_M(tgMH_OrthoLH_S) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(float-equal)
TgINLINE TgVOID FCN_M(tgMH_OrthoLH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    if ((TYPE_K(0) == fViewWidth) || (TYPE_K(0) == fViewHeight) || (fMinZ == fMaxZ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Invalid Function Parameter" );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fFoVz = TYPE_K(1) / (fMaxZ - fMinZ);

        FCN_M(tgMH_CLI_S)(pmOut);

        pmOut->_11 = TYPE_K(2) / fViewWidth;
        pmOut->_22 = TYPE_K(2) / fViewHeight;
        pmOut->_33 = fFoVz;
        pmOut->_43 = -fFoVz * fMinZ;
        pmOut->_44 = TYPE_K(1);
    };
}
CLANG_WARN_DISABLE_POP(float-equal)


/* ---- FCN_M(tgMH_OrthoRH_S) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(float-equal)
TgINLINE TgVOID FCN_M(tgMH_OrthoRH_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    if ((TYPE_K(0) == fViewWidth) || (TYPE_K(0) == fViewHeight) || (fMinZ == fMaxZ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Invalid Function Parameter" );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fFoVz = TYPE_K(1) / (fMinZ - fMaxZ);

        FCN_M(tgMH_CLI_S)(pmOut);

        pmOut->_11 = TYPE_K(2) / fViewWidth;
        pmOut->_22 = TYPE_K(2) / fViewHeight;
        pmOut->_33 = fFoVz;
        pmOut->_43 = fFoVz * fMinZ;
        pmOut->_44 = TYPE_K(1);
    };
}
CLANG_WARN_DISABLE_POP(float-equal)


/* ---- FCN_M(tgMH_Ortho_S) ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Ortho_S)( MAT_S_T(PCU) pmOut, VAR_T(C) fViewWidth, VAR_T(C) fViewHeight, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    FCN_M(tgMH_OrthoLH_S)(pmOut, fViewWidth, fViewHeight, fMinZ, fMaxZ);
}


/* ---- FCN_V(tgMH_Ortho_OffsetLH_ELEM_S) ---------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(float-equal)
TgINLINE TgVOID FCN_M(tgMH_Ortho_OffsetLH_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    if ((fRight == fLeft) || (fTop == fBottom) || (fMinZ == fMaxZ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Invalid Function Parameter" );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fFoVx = TYPE_K(2,0) / (fRight - fLeft);
        VAR_T(C)        fFoVy = TYPE_K(2,0) / (fTop - fBottom);
        VAR_T(C)        fFoVz = TYPE_K(1) / (fMaxZ - fMinZ);

        FCN_M(tgMH_CLI_S)(pmOut);

        pmOut->_11 = fFoVx;
        pmOut->_22 = fFoVy;
        pmOut->_33 = fFoVz;
        pmOut->_14 = (fLeft + fRight) / (fLeft - fRight);
        pmOut->_24 = (fTop + fBottom) / (fBottom - fTop);
        pmOut->_43 = -fFoVz * fMinZ;
        pmOut->_44 = TYPE_K(1);
    };
}


/* ---- FCN_V(tgMH_Ortho_OffsetRH_ELEM_S) ---------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
CLANG_WARN_DISABLE_PUSH(float-equal)
TgINLINE TgVOID FCN_M(tgMH_Ortho_OffsetRH_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    if ((fRight == fLeft) || (fTop == fBottom) || (fMinZ == fMaxZ))
    {
        TgWARNING_MSGF( false, STD_MSG_LITERAL_1, STD_MSG_POST, u8"Invalid Function Parameter" );
        FCN_M(tgMH_CLR_S)(pmOut);
    }
    else
    {
        VAR_T(C)        fFoVx = TYPE_K(2) / (fRight - fLeft);
        VAR_T(C)        fFoVy = TYPE_K(2) / (fTop - fBottom);
        VAR_T(C)        fFoVz = TYPE_K(1) / (fMinZ - fMaxZ);

        FCN_M(tgMH_CLI_S)(pmOut);

        pmOut->_11 = fFoVx;
        pmOut->_22 = fFoVy;
        pmOut->_33 = fFoVz;
        pmOut->_14 = (fLeft + fRight) / (fLeft - fRight);
        pmOut->_24 = (fTop + fBottom) / (fBottom - fTop);
        pmOut->_43 = fFoVz * fMinZ;
        pmOut->_44 = TYPE_K(1);
    };
}
CLANG_WARN_DISABLE_POP(float-equal)


/* ---- FCN_V(tgMH_Ortho_Offset_ELEM_S) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Ortho_Offset_S)(  MAT_S_T(PCU) pmOut, VAR_T(C) fRight, VAR_T(C) fLeft, VAR_T(C) fTop, VAR_T(C) fBottom, VAR_T(C) fMinZ, VAR_T(C) fMaxZ )
{
    FCN_M(tgMH_Ortho_OffsetLH_S)(pmOut, fRight, fLeft, fTop, fBottom, fMinZ, fMaxZ);
}


/* =============================================================================================================================================================================== */
#endif
