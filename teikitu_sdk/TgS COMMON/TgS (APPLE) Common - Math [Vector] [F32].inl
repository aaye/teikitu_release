/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS (APPLE) Common - Math [Vector] [F32].inl
    »Author«    Andrew Aye (mailto: teikitu@andrewaye.com, https://www.andrew.aye.page)
    »Version«   5.17 | »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2023, Andrew Aye.  All Rights Reserved.
    This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license,
    visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
#if !defined(TGS_COMMON_MATH_API_VECTOR_F32_INL)
#define TGS_COMMON_MATH_API_VECTOR_F32_INL
#pragma once


/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- tgMH_Is_Valid_F32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_Valid_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    return (simd_all(vARG_0 == vARG_0));
}


/* ---- tgMH_MAD_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_MAD_F32_04_1( TgVEC_F32_04_1_C vM0, TgVEC_F32_04_1_C vM1, TgVEC_F32_04_1_C vA0 )
{
    return (fma( vM0, vM1, vA0 ));
}


/* ---- tgMH_NMS_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_NMS_F32_04_1( TgVEC_F32_04_1_C vM0, TgVEC_F32_04_1_C vM1, TgVEC_F32_04_1_C vA0 )
{
    return (vA0 - (vM0 * vM1));
}


/* ---- tgMH_DOT_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_DOT_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vRight )
{
    return (simd_dot( vLeft, vRight ));
}


/* ---- tgMH_MUL_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_MUL_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vRight )
{
    return (vLeft * vRight);
}


/* ---- tgMH_DIV_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_DIV_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vRight )
{
    return (vLeft / vRight);
}


/* ---- tgMH_RCP_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_RCP_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    return (simd_recip( vARG_0 ));
}


/* ---- tgMH_LRP_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_LRP_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vRight, TgVEC_F32_04_1_C vParametric )
{
    return (simd_mix( vLeft, vRight, vParametric ));
}


/* ---- tgMH_LSQ_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_LSQ_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (simd_length_squared( vLeft ));
}


/* ---- tgMH_LEN_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_LEN_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (simd_length( vLeft ));
}


/* ---- tgMH_SQRT_F32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_SQRT_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (sqrt( vLeft ));
}


/* ---- tgMH_RSQRT_F32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_RSQRT_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (simd_rsqrt( vLeft ));
}


/* ---- tgMH_NORM_F32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_NORM_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (simd_normalize( vLeft ));
}


/* ---- tgMH_NORM_LEN_F32_04_1 --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_NORM_LEN_F32_04_1( TgVEC_F32_04_1_PCU ptvRet_Length, TgVEC_F32_04_1_C vLeft )
{
    *ptvRet_Length = simd_length( vLeft );
    return (simd_normalize( vLeft ));
}


/* ---- tgMH_CP_SGN_F32_04_1 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_CP_SGN_F32_04_1( TgVEC_F32_04_1_C vARG, TgVEC_F32_04_1_C vSGN )
{
    return (copysign( vARG, vSGN ));
}


/* ---- tgMH_PRX_SGN_F32_04_1 ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_PRX_SGN_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    TgVEC_F32_04_1                      vV0, vV1, vV2, vV3;

    vV0 = tgMH_CMP_GE_F32_04_1( vARG_0, tgMH_SET1_F32_04_1(  KTgROOT_EPS_F32 ) );
    vV1 = tgMH_CMP_LE_F32_04_1( vARG_0, tgMH_SET1_F32_04_1( -KTgROOT_EPS_F32 ) );
    vV2 = tgMH_OR_F32_04_1( vV0, vV1 );
    vV3 = tgMH_SEL_F32_04_1( tgMH_SET1_F32_04_1(  0.0F ), vARG_0, vV2 );

    return (simd_sign( vV3 ));
}


/* ---- tgMH_FLR_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_FLR_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (floor(vLeft));
}


/* ---- tgMH_CEL_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_CEL_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (ceil(vLeft));
}


/* ---- tgMH_CLP_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_CLP_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vMin, TgVEC_F32_04_1_C vMax )
{
    return (simd_clamp( vLeft, vMin, vMax ));
}


/* ---- tgMH_SAT_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_SAT_F32_04_1( TgVEC_F32_04_1_C vLeft )
{
    return (tgMH_CLP_F32_04_1( vLeft, KTgZERO_V128.m_vF32_04_1, KTgONE_V128.m_vF32_04_1 ));
}


/* ---- tgMH_NAN_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_NAN_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    return (!simd_all(vARG_0 == vARG_0));
}


/* ---- tgMH_BND_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgMH_BND_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vBound )
{
    return (tgMH_AND_F32_04_1( tgMH_CMP_GE_F32_04_1( vLeft, -vBound ), tgMH_CMP_LE_F32_04_1( vLeft, vBound ) ));
}


/* ---- tgMH_BND_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_Contained_In_Interval_F32_04_1( TgVEC_F32_04_1_C vLeft, TgVEC_F32_04_1_C vMin, TgVEC_F32_04_1_C vMax )
{
    return (!(simd_any(vLeft < vMin) || simd_any(vLeft > vMax)));
}


/* ---- tgMH_Is_PRX_CMP_EQ_F32_04_1 ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_PRX_CMP_EQ_F32_04_1( TgVEC_F32_04_1_C vARG_0, TgVEC_F32_04_1_C vARG_1 )
{
    TgUN_V128                           uV0, uV1, uV2;
    TgVEC_F32_04_1                      vDiff;

    vDiff = tgMH_SUB_F32_04_1( vARG_0, vARG_1 );
    uV0.m_vF32_04_1 = tgMH_CMP_GE_F32_04_1( vDiff, tgMH_SET1_F32_04_1(  KTgROOT_EPS_F32 ) );
    uV1.m_vF32_04_1 = tgMH_CMP_LE_F32_04_1( vDiff, tgMH_SET1_F32_04_1( -KTgROOT_EPS_F32 ) );
    uV2.m_vF32_04_1 = tgMH_OR_F32_04_1( uV0.m_vF32_04_1, uV1.m_vF32_04_1 );
    
    return (simd_all(tgMH_SET1_U32_04_1( 0 ) == uV2.m_vU32_04_1));
}


/* ---- tgMH_Is_NR0_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_NR0_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    TgUN_V128                           uV0, uV1, uV2;

    uV0.m_vF32_04_1 = tgMH_CMP_GE_F32_04_1( vARG_0, tgMH_SET1_F32_04_1(  KTgROOT_EPS_F32 ) );
    uV1.m_vF32_04_1 = tgMH_CMP_LE_F32_04_1( vARG_0, tgMH_SET1_F32_04_1( -KTgROOT_EPS_F32 ) );
    uV2.m_vF32_04_1 = tgMH_OR_F32_04_1( uV0.m_vF32_04_1, uV1.m_vF32_04_1 );
    
    return (simd_all(tgMH_SET1_U32_04_1( 0 ) == uV2.m_vU32_04_1));
}


/* ---- tgMH_Is_NR1_F32_04_1 -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL tgMH_Is_NR1_F32_04_1( TgVEC_F32_04_1_C vARG_0 )
{
    TgUN_V128                           uV0, uV1, uV2;
    TgVEC_F32_04_1                      vDiff;

    vDiff = tgMH_SUB_F32_04_1( vARG_0, simd_make_float4( 1.0F, 1.0F, 1.0F, 1.0F ) );
    uV0.m_vF32_04_1 = tgMH_CMP_GE_F32_04_1( vDiff, tgMH_SET1_F32_04_1(  KTgROOT_EPS_F32 ) );
    uV1.m_vF32_04_1 = tgMH_CMP_LE_F32_04_1( vDiff, tgMH_SET1_F32_04_1( -KTgROOT_EPS_F32 ) );
    uV2.m_vF32_04_1 = tgMH_OR_F32_04_1( uV0.m_vF32_04_1, uV1.m_vF32_04_1 );
    
    return (simd_all(tgMH_SET1_U32_04_1( 0 ) == uV2.m_vU32_04_1));
}


/* =============================================================================================================================================================================== */
#endif
